Tuples
Tuples are very similar to lists, but they have one key difference: they are immutable. This means that once a tuple is created, it cannot be changed. We can create a tuple by using parentheses instead of square brackets:

my_tuple = (4, 5, 6)

print(my_tuple)  # Output: (4, 5, 6)
We can index it just like a list:

my_tuple = (4, 5, 6)

print(my_tuple[0])  # Output: 4
print(my_tuple[1])  # Output: 5
print(my_tuple[2])  # Output: 6
We can also use slicing:

my_tuple = (4, 5, 6)

print(my_tuple[1:])  # Output: (5, 6)
Keep in mind, slicing a tuple doesn't modify it, instead it creates a new tuple with the specified slice.

Since we can't modify a tuple, the following code will raise an error:

my_tuple = (4, 5, 6)

my_tuple[0] = 1 # Raises an error
We also can't call append or pop on a tuple, since these functions would modify it. We can however still call sum(), max(), and min() on a tuple, since these functions don't modify the tuple.

It's common to use tuples to store related data.